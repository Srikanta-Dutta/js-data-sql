{"version":3,"file":"js-data-sql.js","sources":["../src/index.js"],"sourcesContent":["import knex from 'knex'\nimport Promise from 'bluebird'\nimport {utils} from 'js-data'\nutils.Promise = Promise\n\nimport {\n  Adapter,\n  reserved\n} from 'js-data-adapter'\nimport toString from 'mout/lang/toString'\nimport underscore from 'mout/string/underscore'\n\nconst DEFAULTS = {}\n\nconst equal = function (query, field, value, isOr) {\n  if (value === null) {\n    return query[isOr ? 'orWhereNull' : 'whereNull'](field)\n  }\n  return query[getWhereType(isOr)](field, value)\n}\n\nconst notEqual = function (query, field, value, isOr) {\n  if (value === null) {\n    return query[isOr ? 'orWhereNotNull' : 'whereNotNull'](field)\n  }\n  return query[getWhereType(isOr)](field, '!=', value)\n}\n\nconst getWhereType = function (isOr) {\n  return isOr ? 'orWhere' : 'where'\n}\n\nconst MILES_REGEXP = /(\\d+(\\.\\d+)?)\\s*(m|M)iles$/\nconst KILOMETERS_REGEXP = /(\\d+(\\.\\d+)?)\\s*(k|K)$/\n\n/**\n * Default predicate functions for the filtering operators.\n *\n * @name module:js-data-sql.OPERATORS\n * @property {Function} == Equality operator.\n * @property {Function} != Inequality operator.\n * @property {Function} > \"Greater than\" operator.\n * @property {Function} >= \"Greater than or equal to\" operator.\n * @property {Function} < \"Less than\" operator.\n * @property {Function} <= \"Less than or equal to\" operator.\n * @property {Function} isectEmpty Operator to test that the intersection\n * between two arrays is empty. Not supported.\n * @property {Function} isectNotEmpty Operator to test that the intersection\n * between two arrays is NOT empty. Not supported.\n * @property {Function} in Operator to test whether a value is found in the\n * provided array.\n * @property {Function} notIn Operator to test whether a value is NOT found in\n * the provided array.\n * @property {Function} contains Operator to test whether an array contains the\n * provided value. Not supported.\n * @property {Function} notContains Operator to test whether an array does NOT\n * contain the provided value. Not supported.\n */\nexport const OPERATORS = {\n  '==': equal,\n  '===': equal,\n  '!=': notEqual,\n  '!==': notEqual,\n  '>': function (query, field, value, isOr) {\n    return query[getWhereType(isOr)](field, '>', value)\n  },\n  '>=': function (query, field, value, isOr) {\n    return query[getWhereType(isOr)](field, '>=', value)\n  },\n  '<': function (query, field, value, isOr) {\n    return query[getWhereType(isOr)](field, '<', value)\n  },\n  '<=': function (query, field, value, isOr) {\n    return query[getWhereType(isOr)](field, '<=', value)\n  },\n  'isectEmpty': function (query, field, value, isOr) {\n    throw new Error('isectEmpty not supported!')\n  },\n  'isectNotEmpty': function (query, field, value, isOr) {\n    throw new Error('isectNotEmpty not supported!')\n  },\n  'in': function (query, field, value, isOr) {\n    return query[getWhereType(isOr)](field, 'in', value)\n  },\n  'notIn': function (query, field, value, isOr) {\n    return query[isOr ? 'orNotIn' : 'notIn'](field, value)\n  },\n  'contains': function (query, field, value, isOr) {\n    throw new Error('contains not supported!')\n  },\n  'notContains': function (query, field, value, isOr) {\n    throw new Error('notContains not supported!')\n  },\n  'like': function (query, field, value, isOr) {\n    return query[getWhereType(isOr)](field, 'like', value)\n  },\n  'near': function (query, field, value, isOr) {\n    let radius\n    let unitsPerDegree\n    if (typeof value.radius === 'number' || MILES_REGEXP.test(value.radius)) {\n      radius = typeof value.radius === 'number' ? value.radius : value.radius.match(MILES_REGEXP)[1]\n      unitsPerDegree = 69.0 // miles per degree\n    } else if (KILOMETERS_REGEXP.test(value.radius)) {\n      radius = value.radius.match(KILOMETERS_REGEXP)[1]\n      unitsPerDegree = 111.045 // kilometers per degree;\n    } else {\n      throw new Error('Unknown radius distance units')\n    }\n\n    let [latitudeColumn, longitudeColumn] = field.split(',').map((c) => c.trim())\n    let [latitude, longitude] = value.center\n\n    // Uses indexes on `latitudeColumn` / `longitudeColumn` if available\n    query = query\n      .whereBetween(latitudeColumn, [\n        latitude - (radius / unitsPerDegree),\n        latitude + (radius / unitsPerDegree)\n      ])\n      .whereBetween(longitudeColumn, [\n        longitude - (radius / (unitsPerDegree * Math.cos(latitude * (Math.PI / 180)))),\n        longitude + (radius / (unitsPerDegree * Math.cos(latitude * (Math.PI / 180))))\n      ])\n\n    if (value.calculateDistance) {\n      let distanceColumn = (typeof value.calculateDistance === 'string') ? value.calculateDistance : 'distance'\n      query = query.select(knex.raw(`\n        ${unitsPerDegree} * DEGREES(ACOS(\n          COS(RADIANS(?)) * COS(RADIANS(${latitudeColumn})) *\n          COS(RADIANS(${longitudeColumn}) - RADIANS(?)) +\n          SIN(RADIANS(?)) * SIN(RADIANS(${latitudeColumn}))\n        )) AS ${distanceColumn}`, [latitude, longitude, latitude]))\n    }\n    return query\n  }\n}\n\nObject.freeze(OPERATORS)\n\n/**\n * SqlAdapter class.\n *\n * @example\n * // Use Container instead of DataStore on the server\n * import {Container} from 'js-data'\n * import SqlAdapter from 'js-data-sql'\n *\n * // Create a store to hold your Mappers\n * const store = new Container()\n *\n * // Create an instance of SqlAdapter with default settings\n * const adapter = new SqlAdapter()\n *\n * // Mappers in \"store\" will use the Sql adapter by default\n * store.registerAdapter('sql', adapter, { default: true })\n *\n * // Create a Mapper that maps to a \"user\" table\n * store.defineMapper('user')\n *\n * @class SqlAdapter\n * @extends Adapter\n * @param {Object} [opts] Configuration options.\n * @param {boolean} [opts.debug=false] See {@link Adapter#debug}.\n * @param {Object} [opts.operators] See {@link SqlAdapter#operators}.\n * @param {boolean} [opts.raw=false] See {@link Adapter#raw}.\n */\nexport function SqlAdapter (opts) {\n  const self = this\n  utils.classCallCheck(self, SqlAdapter)\n  opts || (opts = {})\n  opts.knexOptions || (opts.knexOptions = {})\n  utils.fillIn(opts, DEFAULTS)\n\n  Object.defineProperty(self, 'knex', {\n    writable: true,\n    value: undefined\n  })\n\n  Adapter.call(self, opts)\n\n  self.knex || (self.knex = knex(self.knexOptions))\n\n  /**\n   * Override the default predicate functions for specified operators.\n   *\n   * @name SqlAdapter#operators\n   * @type {Object}\n   * @default {}\n   */\n  self.operators || (self.operators = {})\n\n  utils.fillIn(self.operators, OPERATORS)\n}\n\n// Setup prototype inheritance from Adapter\nSqlAdapter.prototype = Object.create(Adapter.prototype, {\n  constructor: {\n    value: SqlAdapter,\n    enumerable: false,\n    writable: true,\n    configurable: true\n  }\n})\n\nObject.defineProperty(SqlAdapter, '__super__', {\n  configurable: true,\n  value: Adapter\n})\n\n/**\n * Alternative to ES2015 class syntax for extending `SqlAdapter`.\n *\n * @example <caption>Using the ES2015 class syntax.</caption>\n * class MySqlAdapter extends SqlAdapter {...}\n * const adapter = new MySqlAdapter()\n *\n * @example <caption>Using {@link SqlAdapter.extend}.</caption>\n * var instanceProps = {...}\n * var classProps = {...}\n *\n * var MySqlAdapter = SqlAdapter.extend(instanceProps, classProps)\n * var adapter = new MySqlAdapter()\n *\n * @method SqlAdapter.extend\n * @static\n * @param {Object} [instanceProps] Properties that will be added to the\n * prototype of the subclass.\n * @param {Object} [classProps] Properties that will be added as static\n * properties to the subclass itself.\n * @return {Constructor} Subclass of `SqlAdapter`.\n */\nSqlAdapter.extend = utils.extend\n\nfunction getTable (mapper) {\n  return mapper.table || underscore(mapper.name)\n}\n\n/*\nfunction processRelationField (resourceConfig, query, field, criteria, options, joinedTables) {\n  let fieldParts = field.split('.')\n  let localResourceConfig = resourceConfig\n  let relationPath = []\n  let relationName = null;\n\n  while (fieldParts.length >= 2) {\n    relationName = fieldParts.shift()\n    let [relation] = localResourceConfig.relationList.filter(r => r.relation === relationName || r.localField === relationName)\n\n    if (relation) {\n      let relationResourceConfig = resourceConfig.getResource(relation.relation)\n      relationPath.push(relation.relation)\n\n      if (relation.type === 'belongsTo' || relation.type === 'hasOne') {\n        // Apply table join for belongsTo/hasOne property (if not done already)\n        if (!joinedTables.some(t => t === relationPath.join('.'))) {\n          let table = getTable(localResourceConfig)\n          let localId = `${table}.${relation.localKey}`\n\n          let relationTable = getTable(relationResourceConfig)\n          let foreignId = `${relationTable}.${relationResourceConfig.idAttribute}`\n\n          query.leftJoin(relationTable, localId, foreignId)\n          joinedTables.push(relationPath.join('.'))\n        }\n      } else if (relation.type === 'hasMany') {\n        // Perform `WHERE EXISTS` subquery for hasMany property\n        let existsParams = {\n          [`${relationName}.${fieldParts.splice(0).join('.')}`]: criteria // remaining field(s) handled by EXISTS subquery\n        };\n        let subQueryTable = getTable(relationResourceConfig);\n        let subQueryOptions = deepMixIn({}, options, { query: knex(this.defaults).select(`${subQueryTable}.*`).from(subQueryTable) })\n        let subQuery = this.filterQuery(relationResourceConfig, existsParams, subQueryOptions)\n          .whereRaw('??.??=??.??', [\n            getTable(relationResourceConfig),\n            relation.foreignKey,\n            getTable(localResourceConfig),\n            localResourceConfig.idAttribute\n          ])\n        if (Object.keys(criteria).some(k => k.indexOf('|') > -1)) {\n          query.orWhereExists(subQuery);\n        } else {\n          query.whereExists(subQuery);\n        }\n      }\n\n      localResourceConfig = relationResourceConfig\n    } else {\n      // hopefully a qualified local column\n    }\n  }\n  relationName = fieldParts.shift();\n\n  return relationName ? `${getTable(localResourceConfig)}.${relationName}` : null;\n}\n\nfunction loadWithRelations (items, resourceConfig, options) {\n  let tasks = []\n  let instance = Array.isArray(items) ? null : items\n\n  if (resourceConfig.relationList) {\n    resourceConfig.relationList.forEach(def => {\n      let relationName = def.relation\n      let relationDef = resourceConfig.getResource(relationName)\n\n      let containedName = null\n      if (contains(options.with, relationName)) {\n        containedName = relationName\n      } else if (contains(options.with, def.localField)) {\n        containedName = def.localField\n      } else {\n        return\n      }\n\n      let __options = deepMixIn({}, options.orig ? options.orig() : options)\n\n      // Filter to only properties under current relation\n      __options.with = options.with.filter(relation => {\n        return relation !== containedName &&\n        relation.indexOf(containedName) === 0 &&\n        relation.length >= containedName.length &&\n        relation[containedName.length] === '.'\n      }).map(relation => relation.substr(containedName.length + 1))\n\n      let task\n\n      if ((def.type === 'hasOne' || def.type === 'hasMany') && def.foreignKey) {\n        task = this.findAll(resourceConfig.getResource(relationName), {\n          where: {\n            [def.foreignKey]: instance ?\n              { '==': instance[def.localKey || resourceConfig.idAttribute] } :\n              { 'in': items.map(item => item[def.localKey || resourceConfig.idAttribute]) }\n          }\n        }, __options).then(relatedItems => {\n          if (instance) {\n            if (def.type === 'hasOne' && relatedItems.length) {\n              instance[def.localField] = relatedItems[0]\n            } else {\n              instance[def.localField] = relatedItems\n            }\n          } else {\n            items.forEach(item => {\n              let attached = relatedItems.filter(ri => ri[def.foreignKey] === item[def.localKey || resourceConfig.idAttribute])\n              if (def.type === 'hasOne' && attached.length) {\n                item[def.localField] = attached[0]\n              } else {\n                item[def.localField] = attached\n              }\n            })\n          }\n\n          return relatedItems\n        })\n      } else if (def.type === 'hasMany' && def.localKeys) {\n        // TODO: Write test for with: hasMany property with localKeys\n        let localKeys = []\n\n        if (instance) {\n          let itemKeys = instance[def.localKeys] || []\n          itemKeys = Array.isArray(itemKeys) ? itemKeys : Object.keys(itemKeys)\n          localKeys = localKeys.concat(itemKeys || [])\n        } else {\n          items.forEach(item => {\n            let itemKeys = item[def.localKeys] || []\n            itemKeys = Array.isArray(itemKeys) ? itemKeys : Object.keys(itemKeys)\n            localKeys = localKeys.concat(itemKeys || [])\n          })\n        }\n\n        task = this.findAll(resourceConfig.getResource(relationName), {\n          where: {\n            [relationDef.idAttribute]: {\n              'in': filter(unique(localKeys), x => x)\n            }\n          }\n        }, __options).then(relatedItems => {\n          if (instance) {\n            instance[def.localField] = relatedItems\n          } else {\n            items.forEach(item => {\n              let itemKeys = item[def.localKeys] || []\n              let attached = relatedItems.filter(ri => itemKeys && contains(itemKeys, ri[relationDef.idAttribute]))\n              item[def.localField] = attached\n            })\n          }\n\n          return relatedItems\n        })\n      } else if (def.type === 'belongsTo' || (def.type === 'hasOne' && def.localKey)) {\n        if (instance) {\n          let id = get(instance, def.localKey)\n          if (id) {\n            task = this.findAll(resourceConfig.getResource(relationName), {\n              where: {\n                [def.foreignKey || relationDef.idAttribute]: { '==': id }\n              }\n            }, __options).then(relatedItems => {\n              let relatedItem = relatedItems && relatedItems[0];\n              instance[def.localField] = relatedItem\n              return relatedItem\n            })\n          }\n        } else {\n          let ids = items.map(item => get(item, def.localKey)).filter(x => x)\n          if (ids.length) {\n            task = this.findAll(resourceConfig.getResource(relationName), {\n              where: {\n                [def.foreignKey || relationDef.idAttribute]: { 'in': ids }\n              }\n            }, __options).then(relatedItems => {\n              items.forEach(item => {\n                relatedItems.forEach(relatedItem => {\n                  if (relatedItem[def.foreignKey || relationDef.idAttribute] === item[def.localKey]) {\n                    item[def.localField] = relatedItem\n                  }\n                })\n              })\n              return relatedItems\n            })\n          }\n        }\n      }\n\n      if (task) {\n        tasks.push(task)\n      }\n    })\n  }\n  return Promise.all(tasks)\n}\n*/\n\nutils.addHiddenPropsToTarget(SqlAdapter.prototype, {\n  _count (mapper, query, opts) {\n    const self = this\n    opts || (opts = {})\n    query || (query = {})\n\n    const sqlBuilder = utils.isUndefined(opts.transaction) ? self.knex : opts.transaction\n    return self.filterQuery(sqlBuilder(getTable(mapper)), query, opts)\n      .count('* as count')\n      .then(function (rows) {\n        return [rows[0].count, {}]\n      })\n  },\n\n  _create (mapper, props, opts) {\n    const self = this\n    const idAttribute = mapper.idAttribute\n    props || (props = {})\n    opts || (opts = {})\n\n    const sqlBuilder = utils.isUndefined(opts.transaction) ? self.knex : opts.transaction\n    return sqlBuilder(getTable(mapper))\n      .insert(props, idAttribute)\n      .then(function (ids) {\n        const id = utils.isUndefined(props[idAttribute]) ? (ids.length ? ids[0] : undefined) : props[idAttribute]\n        if (utils.isUndefined(id)) {\n          throw new Error('Failed to create!')\n        }\n        return self._find(mapper, id, opts).then(function (result) {\n          return [result[0], { ids }]\n        })\n      })\n  },\n\n  _createMany (mapper, props, opts) {\n    const self = this\n    props || (props = {})\n    opts || (opts = {})\n\n    return Promise.all(props.map(function (record) {\n      return self._create(mapper, record, opts)\n    })).then(function (results) {\n      return [results.map(function (result) {\n        return result[0]\n      }), {}]\n    })\n  },\n\n  _destroy (mapper, id, opts) {\n    const self = this\n    opts || (opts = {})\n\n    const sqlBuilder = utils.isUndefined(opts.transaction) ? self.knex : opts.transaction\n    return sqlBuilder(getTable(mapper))\n      .where(mapper.idAttribute, toString(id))\n      .del()\n      .then(function () {\n        return [undefined, {}]\n      })\n  },\n\n  _destroyAll (mapper, query, opts) {\n    const self = this\n    query || (query = {})\n    opts || (opts = {})\n\n    const sqlBuilder = utils.isUndefined(opts.transaction) ? self.knex : opts.transaction\n    return self.filterQuery(sqlBuilder(getTable(mapper)), query, opts)\n      .del()\n      .then(function () {\n        return [undefined, {}]\n      })\n  },\n\n  _find (mapper, id, opts) {\n    const self = this\n    opts || (opts = {})\n\n    const sqlBuilder = utils.isUndefined(opts.transaction) ? self.knex : opts.transaction\n    const table = getTable(mapper)\n    return sqlBuilder\n      .select(`${table}.*`)\n      .from(table)\n      .where(`${table}.${mapper.idAttribute}`, toString(id))\n      .then(function (rows) {\n        if (!rows || !rows.length) {\n          return [undefined, {}]\n        }\n        return [rows[0], {}]\n      })\n  },\n\n  _findAll (mapper, query, opts) {\n    const self = this\n    query || (query = {})\n    opts || (opts = {})\n\n    return self.filterQuery(self.selectTable(mapper, opts), query, opts).then(function (rows) {\n      return [rows || [], {}]\n    })\n  },\n\n  _sum (mapper, field, query, opts) {\n    const self = this\n    if (!utils.isString(field)) {\n      throw new Error('field must be a string!')\n    }\n    opts || (opts = {})\n    query || (query = {})\n\n    const sqlBuilder = utils.isUndefined(opts.transaction) ? self.knex : opts.transaction\n    return self.filterQuery(sqlBuilder(getTable(mapper)), query, opts)\n      .sum(`${field} as sum`)\n      .then(function (rows) {\n        return [rows[0].sum || 0, {}]\n      })\n  },\n\n  _update (mapper, id, props, opts) {\n    const self = this\n    props || (props = {})\n    opts || (opts = {})\n\n    const sqlBuilder = utils.isUndefined(opts.transaction) ? self.knex : opts.transaction\n    return sqlBuilder(getTable(mapper))\n      .where(mapper.idAttribute, toString(id))\n      .update(props)\n      .then(function () {\n        return self._find(mapper, id, opts)\n      })\n      .then(function (result) {\n        if (!result[0]) {\n          throw new Error('Not Found')\n        }\n        return result\n      })\n  },\n\n  _updateAll (mapper, props, query, opts) {\n    const self = this\n    const idAttribute = mapper.idAttribute\n    props || (props = {})\n    query || (query = {})\n    opts || (opts = {})\n\n    let ids\n\n    return self._findAll(mapper, query, opts).then(function (result) {\n      const records = result[0]\n      ids = records.map(function (record) {\n        return record[idAttribute]\n      })\n      const sqlBuilder = utils.isUndefined(opts.transaction) ? self.knex : opts.transaction\n      return self.filterQuery(sqlBuilder(getTable(mapper)), query, opts).update(props)\n    }).then(function () {\n      const _query = { where: {} }\n      _query.where[idAttribute] = { 'in': ids }\n      return self._findAll(mapper, _query, opts)\n    })\n  },\n\n  _updateMany (mapper, records, opts) {\n    const self = this\n    const idAttribute = mapper.idAttribute\n    records || (records = [])\n    opts || (opts = {})\n\n    return Promise.all(records.map(function (record) {\n      return self._update(mapper, record[idAttribute], record, opts)\n    })).then(function (results) {\n      return [results.map(function (result) {\n        return result[0]\n      }), {}]\n    })\n  },\n\n  filterQuery (sqlBuilder, query, opts) {\n    const self = this\n\n    query = utils.plainCopy(query || {})\n    opts || (opts = {})\n    opts.operators || (opts.operators = {})\n    query.where || (query.where = {})\n    query.orderBy || (query.orderBy = query.sort)\n    query.orderBy || (query.orderBy = [])\n    query.skip || (query.skip = query.offset)\n\n    // Transform non-keyword properties to \"where\" clause configuration\n    utils.forOwn(query, function (config, keyword) {\n      if (reserved.indexOf(keyword) === -1) {\n        if (utils.isObject(config)) {\n          query.where[keyword] = config\n        } else {\n          query.where[keyword] = {\n            '==': config\n          }\n        }\n        delete query[keyword]\n      }\n    })\n\n    // Filter\n    if (Object.keys(query.where).length !== 0) {\n      // Apply filter for each field\n      utils.forOwn(query.where, function (criteria, field) {\n        if (!utils.isObject(criteria)) {\n          criteria = { '==': criteria }\n        }\n        // Apply filter for each operator\n        utils.forOwn(criteria, function (value, operator) {\n          let isOr = false\n          if (operator && operator[0] === '|') {\n            operator = operator.substr(1)\n            isOr = true\n          }\n          let predicateFn = self.getOperator(operator, opts)\n          if (predicateFn) {\n            sqlBuilder = predicateFn(sqlBuilder, field, value, isOr)\n          } else {\n            throw new Error(`Operator ${operator} not supported!`)\n          }\n        })\n      })\n    }\n\n    // Sort\n    if (query.orderBy) {\n      if (utils.isString(query.orderBy)) {\n        query.orderBy = [\n          [query.orderBy, 'asc']\n        ]\n      }\n      for (var i = 0; i < query.orderBy.length; i++) {\n        if (utils.isString(query.orderBy[i])) {\n          query.orderBy[i] = [query.orderBy[i], 'asc']\n        }\n        sqlBuilder = sqlBuilder.orderBy(query.orderBy[i][0], (query.orderBy[i][1] || '').toUpperCase() === 'DESC' ? 'desc' : 'asc')\n      }\n    }\n\n    // Offset\n    if (query.skip) {\n      sqlBuilder = sqlBuilder.offset(+query.skip)\n    }\n\n    // Limit\n    if (query.limit) {\n      sqlBuilder = sqlBuilder.limit(+query.limit)\n    }\n\n    return sqlBuilder\n    // if (!isEmpty(params.where)) {\n    //   forOwn(params.where, (criteria, field) => {\n    //     if (contains(field, '.')) {\n    //       if (contains(field, ',')) {\n    //         let splitFields = field.split(',').map(c => c.trim())\n    //         field = splitFields.map(splitField => processRelationField.call(this, resourceConfig, query, splitField, criteria, options, joinedTables)).join(',')\n    //       } else {\n    //         field = processRelationField.call(this, resourceConfig, query, field, criteria, options, joinedTables)\n    //       }\n    //     }\n    //   })\n    // }\n  },\n\n  /**\n   * Resolve the predicate function for the specified operator based on the\n   * given options and this adapter's settings.\n   *\n   * @name SqlAdapter#getOperator\n   * @method\n   * @param {string} operator The name of the operator.\n   * @param {Object} [opts] Configuration options.\n   * @param {Object} [opts.operators] Override the default predicate functions\n   * for specified operators.\n   * @return {*} The predicate function for the specified operator.\n   */\n  getOperator (operator, opts) {\n    opts || (opts = {})\n    opts.operators || (opts.operators = {})\n    let ownOps = this.operators || {}\n    return utils.isUndefined(opts.operators[operator]) ? ownOps[operator] : opts.operators[operator]\n  },\n\n  getTable (mapper) {\n    return mapper.table || underscore(mapper.name)\n  },\n\n  selectTable (mapper, opts) {\n    const self = this\n    opts || (opts = {})\n    const query = utils.isUndefined(opts.query) ? self.knex : opts.query\n    const table = self.getTable(mapper)\n\n    return query.select(`${table}.*`).from(table)\n  }\n})\n\n/**\n * Details of the current version of the `js-data-sql` module.\n *\n * @name module:js-data-sql.version\n * @type {Object}\n * @property {string} version.full The full semver value.\n * @property {number} version.major The major version number.\n * @property {number} version.minor The minor version number.\n * @property {number} version.patch The patch version number.\n * @property {(string|boolean)} version.alpha The alpha version value,\n * otherwise `false` if the current version is not alpha.\n * @property {(string|boolean)} version.beta The beta version value,\n * otherwise `false` if the current version is not beta.\n */\nexport const version = '<%= version %>'\n\n/**\n * Registered as `js-data-sql` in NPM.\n *\n * @example <caption>CommonJS</caption>\n * var SqlAdapter = require('js-data-sql').SqlAdapter\n * var adapter = new SqlAdapter()\n *\n * @example <caption>ES2015 Modules</caption>\n * import {SqlAdapter} from 'js-data-sql'\n * const adapter = new SqlAdapter()\n *\n * @module js-data-sql\n */\n\nexport default SqlAdapter\n"],"names":["utils","Adapter","reserved"],"mappings":"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"}